name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SPRING_PROFILES_ACTIVE: test
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  QLTY_COVERAGE_TOKEN: ${{ secrets.QLTY_COVERAGE_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "8.13"

      - name: Build with Gradle
        run: ./gradlew build --no-daemon -Dsentry.auth.token=${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Run tests
        run: ./gradlew test -Dspring.profiles.active=test --stacktrace --debug

      - name: Generate coverage report
        run: ./gradlew jacocoTestReport

      - name: Upload to Qlty.sh
        uses: qltysh/qlty-action/coverage@v1
        with:
          files: build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('build.gradle') }}
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

      - name: Upload source context to Sentry
        if: github.ref == 'refs/heads/main'
        run: |
          echo "SENTRY_AUTH_TOKEN length: ${#SENTRY_AUTH_TOKEN}"
          curl -sL https://sentry.io/get-cli/ | bash
          sentry-cli info --auth-token $SENTRY_AUTH_TOKEN
          ./gradlew sentryBundleSources -Dsentry.auth.token=$SENTRY_AUTH_TOKEN --info
        env:
          SENTRY_LOG_LEVEL: debug

      - name: Build Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker build -t my-app:latest
          echo "SENTRY_DSN=$SENTRY_DSN" > .env
          echo "SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN" >> .env
